name: OpenG2P Odoo Package Dockers build

on:
  workflow_dispatch:
    inputs:
      packageName:
        description: 'Package path w.r.t packages folder'
        required: true
        default: ''
        type: string 

jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.docker_hub_organisation }}
      PBMS_DOCKER_IMAGE_NAME: openg2p-pbms-odoo-package
      SOCIAL_REGISTRY_DOCKER_IMAGE_NAME: openg2p-social-registry-odoo-package
      OPENG2P_BOT_GITHUB_PAT: ${{ secrets.OPENG2P_BOT_GITHUB_PAT }}
    steps:
      - uses: actions/checkout@v2

      - name: Docker Login
        run: |
          echo "${{ secrets.docker_hub_token }}" | docker login -u ${{ secrets.docker_hub_actor }} --password-stdin || echo "::warning::Failed to Login to dockerhub"

      - name: Docker build & push
        run: |
          cd packaging/packages

          packageNameInput=${{ inputs.packageName }}

          if [ ! -f ${packageNameInput} ]; then
            echo "Could not find the package specified." 1>&2;
            exit 1;
          fi

          package=${packageNameInput}
          export IMAGE_ID=$(sed -n '1p' $package)

          if [[ $IMAGE_ID == "#!"* ]]; then
            export IMAGE_ID=${IMAGE_ID#"#!"}
          else
            export DOCKER_TAG=$(basename "${package}" ".txt")
            if [[ $packageNameInput == pbms* ]]; then
              export IMAGE_ID=$NAMESPACE/$PBMS_DOCKER_IMAGE_NAME:$DOCKER_TAG
            elif [[ $packageNameInput == social-registry* ]]; then
              export IMAGE_ID=$NAMESPACE/$SOCIAL_REGISTRY_DOCKER_IMAGE_NAME:$DOCKER_TAG
            fi
          fi

          export ODOO_BASE_VERSION=$(sed -n '2p' $package)
          export ODOO_BASE_VERSION=${ODOO_BASE_VERSION#"#!"}

          cd ../
          ./package.sh packages/${package}
          docker build . \
            --build-arg BASE_VERSION=${ODOO_BASE_VERSION} \
            --file Dockerfile \
            --tag $IMAGE_ID
          docker push $IMAGE_ID
