name: OpenG2P Odoo Package Dockers build

on:
  workflow_dispatch:
    inputs:
      packageName:
        description: 'Package Name'
        required: true
        default: 'pbms/17.0-develop'
        type: choice
        options:
          - pbms/*
          - pbms/15.0-develop
          - pbms/15.0-develop-pilot001
          - pbms/15.0-ugc-demo
          - pbms/15.0-1.1.0
          - pbms/1.1.0
          - pbms/17.0-develop-with-social-registry
          - pbms/17.0-develop
          - social-registry/*
          - social-registry/17.0-develop
          - social-registry/v1.2.0

jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.docker_hub_organisation }}
      PBMS_DOCKER_IMAGE_NAME: openg2p-odoo-package
      SOCIAL_REGISTRY_DOCKER_IMAGE_NAME: openg2p-social-registry-odoo-package
    steps:
      - uses: actions/checkout@v2

      - name: Docker Login
        run: |
          echo "${{ secrets.docker_hub_token }}" | docker login -u ${{ secrets.docker_hub_actor }} --password-stdin || echo "::warning::Failed to Login to dockerhub"

      - name: Docker build & push
        run: |
          cd packaging

          packageNameInput=${{ inputs.packageName }}

          if [ ! -f "packages/${packageNameInput}.txt" ]; then
            echo "Could not find the package specified." 1>&2;
            exit 1;
          fi

          for package in packages/${packageNameInput}.txt; do
            if [[ $packageNameInput == pbms* ]]; then
              export IMAGE_ID=$NAMESPACE/$PBMS_DOCKER_IMAGE_NAME
            elif [[ $packageNameInput == social-registry* ]]; then
              export IMAGE_ID=$NAMESPACE/$SOCIAL_REGISTRY_DOCKER_IMAGE_NAME
            fi

            export ODOO_BASE_VERSION=$(head -n 1 $package)
            export ODOO_BASE_VERSION=${ODOO_BASE_VERSION#"#!"}

            export OCA_DEPENDENCY_VERSION=$(echo $ODOO_BASE_VERSION | awk -F'.' '{print $1 "." $2}')

            export DOCKER_TAG=$(basename "${package}" ".txt")

            ./package.sh ${package}
            docker build . \
              --build-arg BASE_VERSION=${ODOO_BASE_VERSION} \
              --file Dockerfile \
              --tag $IMAGE_ID:$DOCKER_TAG
            docker push $IMAGE_ID:$DOCKER_TAG
          done
